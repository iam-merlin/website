{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Avatar/index.js","webpack:///./src/svgs/clock.svg","webpack:///./src/components/Tag/index.js","webpack:///./src/components/Metadata/Wrapper.js","webpack:///./src/components/Metadata/Author.js","webpack:///./src/components/Metadata/Published.js","webpack:///./src/components/Metadata/PublishDate.js","webpack:///./src/components/Metadata/ReadingTime.js","webpack:///./src/components/Metadata/index.js","webpack:///./src/components/Title/index.js","webpack:///./src/components/Excerpt/index.js","webpack:///./src/components/Link/index.js","webpack:///./src/components/Entry/index.js","webpack:///./src/components/PostEntry/index.js","webpack:///./src/components/seo.js"],"names":["IndexPage","_ref","data","allMarkdownRemark","edges","map","edge","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_PostEntry__WEBPACK_IMPORTED_MODULE_2__","Object","assign","key","node","id","frontmatter","fields","__webpack_exports__","res","Fragment","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","pageQuery","Avatar","styled","img","_templateObject","width","_ref2","height","_ref3","propTypes","size","PropTypes","number","shape","isRequired","src","string","srcSet","React","__webpack_require__","Clock","props","d","defaultProps","viewBox","module","exports","default","div","span","Author_templateObject","Published_templateObject","time","PublishDate_templateObject","StyledClock","ReadingTime_templateObject","Time","_templateObject2","ReadingTime","duration","react_default","Math","round","StyledLink","Link","Metadata_templateObject","Metadata","path","firstname","lastname","published","Wrapper","Author","to","Published","PublishDate","dateTime","Metadata_ReadingTime","h2","P","p","Excerpt_templateObject","Excerpt","children","Link_templateObject","article","Entry_templateObject","readingTime","excerpt","date","_ref$tags","tags","gatsby_browser_entry","query","render","_ref2$markdownRemark$","markdownRemark","authorPath","avatar","Entry","toLowerCase","Tag","Title","childImageSharp","resolutions","_3153017582","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf","object"],"mappings":"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","file":"component---src-pages-index-js-fa291fd1a3569fe93eee.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport PostEntry from \"../components/PostEntry\"\nimport SEO       from \"../components/seo\"\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) =>\n  edges.map(edge => (\n    <PostEntry\n      key={edge.node.id}\n      {...edge.node.frontmatter}\n      {...edge.node.fields}\n    />\n  ))\n\nexport default res => (\n  <>\n    <SEO title=\"Welcome\" />\n    <IndexPage {...res} />\n  </>\n)\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { type: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            tags\n            author\n            excerpt\n          }\n          fields {\n            readingTime {\n              time\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import styled    from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst Avatar = styled.img`\n  display: inline-block;\n  margin: 0 9px 0 6px;\n  vertical-align: -6px;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n  border-radius: ${({ height }) => height * 2}px;\n`\n\nAvatar.propTypes = {\n  size: PropTypes.number,\n  img: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string.isRequired,\n  }),\n}\n\nexport default Avatar\n","var React = require('react');\n\nfunction Clock (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"d\":\"M189.156,0C84.858,0,0.001,84.858,0.001,189.155c0,104.298,84.857,189.155,189.155,189.155\\n\\t\\t\\tc104.304,0,189.154-84.857,189.154-189.155C378.31,84.858,293.46,0,189.156,0z M189.156,347.144\\n\\t\\t\\tc-87.117,0-157.988-70.87-157.988-157.988c0-87.115,70.871-157.988,157.988-157.988c87.117,0,157.986,70.873,157.986,157.988\\n\\t\\t\\tC347.142,276.273,276.272,347.144,189.156,347.144z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M204.739,182.963V75.841c0-8.606-6.977-15.584-15.583-15.584c-8.605,0-15.582,6.978-15.582,15.584v113.314\\n\\t\\t\\tc0,4.839,2.25,9.101,5.703,11.962c0.146,0.176,0.245,0.373,0.397,0.546l58.438,66.354c3.082,3.49,7.381,5.279,11.701,5.279\\n\\t\\t\\tc3.652,0,7.33-1.276,10.289-3.888c6.461-5.692,7.084-15.537,1.398-21.998L204.739,182.963z\",\"key\":1})]);\n}\n\nClock.defaultProps = {\"viewBox\":\"0 0 378.311 378.311\"};\n\nmodule.exports = Clock;\n\nClock.default = Clock;\n","import styled   from \"styled-components\"\n\nexport default styled.div`\ndisplay: inline-block;\nfont-size: 22px;\nfont-weight: 600;\ncolor: #c4c8d2;\nmargin-right: 20px;\ntext-transform: capitalize;\n`\n","import styled from \"styled-components\"\n\nexport default styled.span`\nfont-size: 17px;\ncolor: #98a0b3;\n`\n","import styled from \"styled-components\"\n\nexport default styled.span`\nfont-size: 17px;\ncolor: #98a0b3;\n`;\n","import styled from \"styled-components\"\n\nexport default styled.span`\nfont-size: 17px;\ncolor: #98a0b3;\n`\n","import styled from \"styled-components\"\n\nexport default styled.time`\nfont-weight: 600;\ncolor: #014fb0;\n`\n","import React  from \"react\"\nimport styled from \"styled-components\"\nimport Clock  from \"../../svgs/clock.svg\"\n\nconst StyledClock = styled(Clock)`\nvertical-align: sub;\npadding: 0 5px 0 20px;\nfill: #014fb0;\nwidth: 20px;\n`\n\nconst Time = styled.time`\nfont-weight: 600;\ncolor: #014fb0;\n`\n\nconst ReadingTime = ({ duration }) => (\n  <Time>\n    <StyledClock/>\n    ~ {Math.round(duration / 1000 / 60)} min\n  </Time>\n)\n\n\nexport default ReadingTime\n","import React       from \"react\"\nimport PropTypes   from \"prop-types\"\nimport { Link }    from \"gatsby\"\n\nimport Wrapper     from \"./Wrapper\"\nimport Author      from \"./Author\"\nimport Published   from \"./Published\"\nimport PublishDate from \"./PublishDate\"\n\nimport Avatar      from \"../Avatar\"\nimport styled      from \"styled-components\"\nimport ReadingTime from \"./ReadingTime\"\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #014fb0;\n`\n\nconst Metadata = (\n  {\n    path,\n    time,\n    img,\n    firstname,\n    lastname,\n    published,\n  },\n) => (\n  <Wrapper>\n    <Author>Posted by\n      <StyledLink to={path}>\n        <Avatar {...img} />\n        {firstname}&nbsp;{lastname}\n      </StyledLink>\n      <Published>\n        &nbsp;on&nbsp;\n        <PublishDate dateTime={published}>{published}</PublishDate>\n      </Published>\n      <ReadingTime duration={time}/>\n    </Author>\n  </Wrapper>\n)\n\nMetadata.propTypes = {\n  path: PropTypes.string.isRequired,\n  img: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string.isRequired,\n  }),\n  time: PropTypes.number.isRequired,\n  firstname: PropTypes.string.isRequired,\n  lastname: PropTypes.string.isRequired,\n  published: PropTypes.string.isRequired,\n}\n\nexport default Metadata\n","import styled    from \"styled-components\"\n\nexport default styled.h2`\nfont-family: \"PT Serif\",\"Times New Roman\",serif;\nfont-size: 38px;\nfont-weight: 700;\nline-height: 54px;\nposition: relative;\nmargin: 0 0 38px 0;\ncolor: #1b1c1f;\n`\n","import React  from \"react\"\nimport styled from \"styled-components\"\n\nconst P = styled.p`\nfont-size: 18px;\nline-height: 42px;\nmargin: 48px 0 0 0;\n`;\n\nexport default ({ children }) => (\n  <P>{children}...</P>\n)\n","import styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nexport default styled(Link)`\n  text-decoration: none;\n`\n","import styled from \"styled-components\"\n\nexport default styled.article`\n    position: relative;\n    margin: 0 0 68px 0;\n    padding: 0 0 68px 0;\n\n&::before {\n    position: absolute;\n    top: 38px;\n    left: -65px;\n    width: 6px;\n    height: 6px;\n    content: '';\n    transition: border 0.2s ease-out, background 0.2s ease-out;\n    border: 6px solid #f2f6fa;\n    border-radius: 12px;\n    background-color: #d2dbe5;\n}\n&::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 44%;\n    height: 1px;\n    content: '';\n    background-color: #e8e8ef;\n}\n`\n","import React                    from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Title    from \"../Title\"\nimport Metadata from \"../Metadata\"\nimport Excerpt  from \"../Excerpt\"\nimport Tag      from \"../Tag\"\nimport Link     from \"../Link\"\nimport Entry    from \"../Entry\"\n\nexport default ({ readingTime, path, title, excerpt, date, tags = [] }) => <StaticQuery\n  query={graphql`\n    query {\n      markdownRemark(frontmatter: { slug: { eq: \"romain-dary\" }, type: { eq: \"author\"} }) {\n        html\n        frontmatter {\n          path\n          firstname\n          lastname\n          avatar {\n            childImageSharp {\n              resolutions(width: 24) {\n                width\n                height\n                src\n                srcSet\n              }\n            }\n          }\n        }\n      }\n    }\n  `}\n\n  render={(\n    {\n      markdownRemark: {\n        frontmatter: {\n          path: authorPath,\n          avatar,\n          firstname,\n          lastname,\n        },\n      },\n    }) => (\n    <Entry>\n      {tags[0] ? (<Link to={`/tags/${tags[0].toLowerCase()}`} key={tags[0]}><Tag>{tags[0]}</Tag></Link>) : null}\n      <Link to={path}><Title>{title}</Title></Link>\n      <Metadata\n        path={authorPath}\n        img={avatar.childImageSharp.resolutions}\n        firstname={firstname}\n        lastname={lastname}\n        published={date}\n        time={readingTime.time}\n      />\n      <Excerpt>{excerpt}</Excerpt>\n    </Entry>\n  )}\n/>\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}